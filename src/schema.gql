# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  _id: ID!
  firstName: String!
  lastName: String!
  userName: String!
  email: String!
  profilePhoto: String
  roles: [UserRole!]!
  bio: String
  isDeleted: Boolean!
  deletedAt: String
  createdAt: String!
  updatedAt: String!
  status: Boolean!
  expertise: String
  maxStudents: Float
  coachedStudents: [User!]
  academicLevel: String
  interests: [String!]
  coach: User
}

"""User roles"""
enum UserRole {
  ADMIN
  COACH
  STUDENT
  USER
}

type CoachingRequest {
  _id: ID!
  student: User!
  coach: User!
  status: CoachingRequestStatus!
  message: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""Status of the coaching request"""
enum CoachingRequestStatus {
  PENDING
  ACCEPTED
  REJECTED
  CANCELD
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ClassRoom {
  _id: ID!
  name: String!
  description: String!
  coach: User!
  students: [User!]!
  assignments: [Assignment!]!
  createdAt: String!
  updatedAt: String!
}

type Assignment {
  _id: ID!
  title: String!
  description: String
  dueDate: DateTime!
  assignmentType: AssignmentType!
  classRoom: ClassRoom
  students: [User!]
  coach: User!
  status: AssignmentStatus!
  priority: AssignmentPriority
  visibility: AssignmentVisibility
  tags: [String!]
  timeBeforeDueDate: Float
  attachments: [String!]
}

"""Assignment Type"""
enum AssignmentType {
  CLASS
  INDIVIDUAL
}

"""Assignment Status"""
enum AssignmentStatus {
  PENDING
  IN_PROGRESS
  SUBMITTED
  GRADED
  OVERDUE
}

"""Assignment Priority"""
enum AssignmentPriority {
  HIGH
  MEDIUM
  LOW
}

"""Assignment visibility"""
enum AssignmentVisibility {
  PUBLIC
  PRIVATE
  TEAM
}

type SignUpObject {
  activationToken: String!
}

type Notification {
  _id: ID!
  recipients: [ID!]!
  sender: User!
  message: String!
  type: NotificationType!
  isRead: Boolean!
  createdAt: DateTime!
  readAt: DateTime
}

"""notification  type"""
enum NotificationType {
  INFO
  SUCCESS
  WARNING
  ERROR
}

type Query {
  gethello: String!
  me: User!
  getMyCoachingRequest(input: GetMyCoachingRequestInput!): [CoachingRequest!]!
  getStudent: [User!]!
  getCoachingRequest(input: GetCoachingRequestInput!): [CoachingRequest!]!
  getCoach: [User!]!
  getCoachedStudents: [User!]!
  getNotification: [Notification!]!
  getClass: String!
  getAssignment(assignmentId: String!): Assignment!
}

input GetMyCoachingRequestInput {
  status: CoachingRequestStatus
}

input GetCoachingRequestInput {
  coachingId: String
  status: CoachingRequestStatus!
}

type Mutation {
  signUp(input: SignUpInput!): SignUpObject!
  activationUser(input: ActivationUserInput!): User!
  signIn(input: SignInput!): User!
  logout: String!
  forgotPassword(email: String!): String!
  resetPassword(input: ResetPasswordInput!): String!
  sendCoachingRequest(input: SendCoachingRequestInput!): CoachingRequest!
  cancelMyCoachingRequest(input: CancelMyCoachingRequestInput!): CoachingRequest!
  updateCoachingRequestStatus(input: UpdateCoachingRequestInput!): CoachingRequest!
  sendNotification(recipientIds: [String!]!, message: String!, type: NotificationType): String!
  createClass(input: CreateClassInput!): ClassRoom!
  createClassRoomJoinLink(input: CreateClassRoomJoinLinkInput!): String!
  joinClassRoom(token: String!): ClassRoom!
  leaveClassRoom(classRoomId: String!): String!
  createAssignment(input: CreateAssignmentInput!): Assignment!
}

input SignUpInput {
  firstName: String!
  lastName: String!
  email: String!
  userName: String!
  password: String!
  roles: [UserRole!]! = [USER]
}

input ActivationUserInput {
  activationToken: String!
  activationCode: String!
}

input SignInput {
  email: String!
  password: String!
}

input ResetPasswordInput {
  token: String!
  password: String!
}

input SendCoachingRequestInput {
  coachingId: String
  message: String!
}

input CancelMyCoachingRequestInput {
  requestId: String!
}

input UpdateCoachingRequestInput {
  requestId: String
  status: CoachingRequestStatus!
}

input CreateClassInput {
  name: String!
  description: String!
}

input CreateClassRoomJoinLinkInput {
  duration: Float! = 10
  classRoomId: String!
}

input CreateAssignmentInput {
  title: String!
  description: String
  dueDate: DateTime!
  assignmentType: AssignmentType!
  classRoom: String
  students: [String!]
  status: AssignmentStatus
  priority: AssignmentPriority
  visibility: AssignmentVisibility
  tags: [String!]
  attachments: [String!]
}

type Subscription {
  userNotifications: Notification!
}